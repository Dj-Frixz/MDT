(0,0,0,0,>)
(0,1,0,1,>)
(0,2,0,2,>)
(0,3,0,3,>)
(0,4,0,4,>)
(0,5,0,5,>)
(0,6,0,6,>)
(0,7,0,7,>)
(0,8,0,8,>)
(0,9,0,9,>)
(0,-,1,-,<)
(0,=,0,=,>)
(1,1,2,0,<)
(1,2,2,1,<)
(1,3,2,2,<)
(1,4,2,3,<)
(1,5,2,4,<)
(1,6,2,5,<)
(1,7,2,6,<)
(1,8,2,7,<)
(1,9,2,8,<)
(1,0,1,9,<)
(1,=,4,=,>)
(1,-,6,=,<)
(2,0,2,0,<)
(2,1,2,1,<)
(2,2,2,2,<)
(2,3,2,3,<)
(2,4,2,4,<)
(2,5,2,5,<)
(2,6,2,6,<)
(2,7,2,7,<)
(2,8,2,8,<)
(2,9,2,9,<)
(2,-,3,=,<)
(2,=,3,=,<)
(3,-,0,1,>)
(3,0,0,1,>)
(3,1,3,0,<)
(4,9,4,9,>)
(4,-,5,-,<)
(5,9,5,-,<)
(5,=,7,-,<)
(6,-,6,0,>)
(6,=,4,=,>)

This Turing machine converts in a pretty slow but simple way:
it just subtracts 1 base 10 on the number inserted (on the right)
while adding 1 base 2 one the binary number generated on the left,
which is "inizialized" at zero.
The execution stops when the decimal number is 0.
The complexity increases according to the size of the number inserted.
